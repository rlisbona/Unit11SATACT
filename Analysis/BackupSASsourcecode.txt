
* Backup 2016/08/07 3:57PM;

* Rlisbona MSDS 6306 Unit 11 ACTSAT data;
*;
* Create library ACTSAT;
libname ACTSAT "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\SASdatasets";
run;
* Rename the input file;
Data Stats;
Set ACTSAT.dataset1;
run;

proc print data = Stats (obs=52);
run;


*******************************************************************************************************************************************;
* Open a file of state codes and state names;
proc import datafile= "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\StateCodesClean.csv" out = statecodes 
dbms=csv replace;
guessingrows = 59 ;
getnames = yes; 
run;

data statecodes (drop= var4 StateAbbr);
set statecodes;
if Statecode in ("AS","FM","MH","MP","VI","PR","PW","GU") then statecode = "";
if statecode NE "";
rename state = statename;
run;

Proc sort data = statecodes;
by StateCode;
run;

proc print data = statecodes;
run;
*******************************   01   ***********************************************************************;

*Import file 01;
Proc Import Out = i01testscores_xls (KEEP = State SPENDING_PER_STUDENT)
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\01testscores.xls" 
dbms = xls replace;
getnames = yes;
namerow = 1;
startrow =2;
 run;

data i01testscores_xls2;
  length statename $ 32 ;
 set i01testscores_xls;
if state = "DC" then statename = "District of Columbia"; else statename = state;
statename = PROPCASE(statename);
drop state;
rename SPENDING_PER_STUDENT=Spending_Per_Student01;
run;

title1  "01testscores.xls";
*link = "https://github.com/wkerneck/SASFileExport/blob/master/data/testscores.xls?raw=true";
 proc print data = i01testscores_xls2;
 run;

 Data Combined01;
 set i01testscores_xls2;
 run;

 proc sort data = combined01;
 by statename;
 run;

 title1 "Combined - 01";
 proc print data = Combined01;
 run;

*******************************   03   ***********************************************************************;

Proc Import Out = i03AAbbottEducation_xlsx (KEEP = State PctMalesNeverMarried PctFemalesNeverMarried)
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\03AAbbottEducation.xlsx"
dbms = xlsx replace;
*sheet = "sheet1";
*range = "A1..P52";
getnames = yes;
 run;


data i03AAbbottEducation_xlsx2;
  length statename $ 32 ;
 set i03AAbbottEducation_xlsx;
if state = "DC" then statename = "District of Columbia"; else statename = state;
statename = PROPCASE(statename);
PctMalesNeverMarried = floor(PctMalesNeverMarried * 1000)/10;  * convert to ##.# format ;
PctfemalesNeverMarried = floor(PctFemalesNeverMarried * 1000)/10; * convert to ##.# format ;
drop state;
rename PctMalesNeverMarried=PctMalesNeverMarried03;
rename PctFemalesNeverMarried = PctFemalesNeverMarried03;
run;

title1  "i03AAbbottEducation.xlsx";
 proc print data = i03AAbbottEducation_xlsx2;
 run;

proc sort data = combined01;
by statename;
run;

proc sort data = i03AAbbottEducation_xlsx2;
 by statename;
 run;

 title1  "i03AAbbottEducation.xlsx";
 proc print data = i03AAbbottEducation_xlsx2;
 run;

 Data Combined03;
 merge Combined01 i03AAbbottEducation_xlsx2;
 by Statename;

 title1 "Combined - 03";
Proc print data = Combined03;
run;
*******************************   04   ***********************************************************************;
Proc Import Out = i04WhitePerBlackPer_xlsx (KEEP = Location White Black)
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\04WhitePerBlackPer.xlsx"
dbms = xlsx replace;
*sheet = "sheet1";
*range = "A1..P52";
getnames = yes;
 run;

title1 "i04WhitePerBlackPer";
 proc print data = i04WhitePerBlackPer_xlsx;
 run;

data i04WhitePerBlackPer_xlsx2;
  length statename $ 32 ;
 set i04WhitePerBlackPer_xlsx;
if location = "DC" then statename = "District of Columbia"; else statename = location;
statename = PROPCASE(statename);
White = round(White *100,.1); * convert to ##.# format ;
Black = round(Black *100,.1); * convert to ##.# format ;
drop Location;
rename White = PctWhite04;
rename Black = PctBlack04;
format PctWhite04 D9.1;
format PctBlack04 D9.1;

run;

Proc sort data = i04WhitePerBlackPer_xlsx2;
by statename;
run;

title1 "i04WhitePerBlackPer";
 proc print data = i04WhitePerBlackPer_xlsx2;
 run;

Data Combined04;
 merge Combined03 i04WhitePerBlackPer_xlsx2;
 by Statename;

 title1 "Combined - 04";
Proc print data = Combined04;
run;

*******************************   06   ***********************************************************************;

Proc Import Out = i06PublicPrivateSchoolsClean (KEEP = State  HS_PCT_Private  )
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\06PublicPrivateSchoolsClean.xls"
dbms = xls replace;
getnames = yes;
namerow = 1;
startrow =2;
 run;

 title1 "i06PublicPrivateSchoolsClean_xls";
 proc print data = i06PublicPrivateSchoolsClean;
 run;

data i06PublicPrivateSchoolsClean_2;
  length statename $ 32 ;
 set i06PublicPrivateSchoolsClean;
if state = "DC" then statename = "District of Columbia"; else statename = state;
statename = PROPCASE(statename);
HS_PCT_Private = Round(HS_PCT_Private *1000/10,.1);* convert to ##.# format ;
drop state;
rename HS_PCT_Private = HS_Pct_Private06;
format HS_Pct_Private06 F9.1;
run;

Proc sort data = i06PublicPrivateSchoolsClean_2;
by statename;
run;

title1 "i06PublicPrivateSchoolsClean2_xls";
 proc print data = i06PublicPrivateSchoolsClean_2;
 run;

Data Combined06;
 merge Combined04 i06PublicPrivateSchoolsClean_2;
 by Statename;

 title1 "Combined - 06";
Proc print data = Combined06;
run;



*******************************   08   ***********************************************************************;

Data i08PovertyLevel_csv; 
infile "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\08PovertyLevel.csv" Firstobs = 3 delimiter =",";
*replace;
*dbms = csv replace;
*getnames = yes;
length state $32;
input state $ PCT_povertyLevel ;
 run;

title1 "i08PovertyLevel_csv";
  proc print data = i08PovertyLevel_csv;
 run;

data i08PovertyLevel_csv2;
  length statename $ 32 ;
 set i08PovertyLevel_csv;
if state = "Virgina" then state = "Virginia";
if state = "DC" then statename = "District of Columbia"; else statename = state;
statename = PROPCASE(statename);
PCT_PovertyLevel = PCT_PovertyLevel/100.0;
PCT_povertyLevel = floor(PCT_povertyLevel *1000/10);* convert to ##.# format ;
drop state;
rename PCT_povertyLevel = PctPovertyLevel08;
run;

title1 "i08PovertyLevel_csv2";
 proc print data = i08PovertyLevel_csv2;
 run;

 proc sort data = i08PovertyLevel_csv2;
 by statename;
 run;

Data Combined08;
 merge Combined06 i08PovertyLevel_csv2;
 by Statename;

 title1 "Combined - 08";
Proc print data = Combined08;
run;

*******************************   09   ***********************************************************************;

Data i09PercentAPStudents_csv; 
infile "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\09PercentAPStudents.csv" Firstobs = 2 lrecl=32767 missover delimiter =",";
length state $32;
input state $ PCT_AP_2014 $ PCT_AP_2015 $ ;
PCT_Students_AP_2014_09 = input(PCT_AP_2014,percent7.2);
PCT_Students_AP_2015_09 = input(PCT_AP_2015,percent7.2);
drop PCT_AP_2014 PCT_AP_2015;
 run;

title1 "i09PercentAPStudents_csv";
  proc print data = i09PercentAPStudents_csv;
 run;

data i09PercentAPStudents_csv2;
  length statename $ 32 ;
 set i09PercentAPStudents_csv;
if state = "DC" then statename = "District of Columbia"; else statename = state;
statename = PROPCASE(statename);
PCT_Students_AP_2014_09 = floor(PCT_Students_AP_2014_09 *1000/10);* convert to ##.# format ;
PCT_Students_AP_2015_09 = floor(PCT_Students_AP_2015_09 *1000/10);* convert to ##.# format ;
drop state;
run;

title1 "i09PercentAPStudents_csv2";
 proc print data = i09PercentAPStudents_csv2;
 run;

 proc sort data = i09PercentAPStudents_csv2;
 by statename;
 run;


Data Combined09;
 merge Combined08 i09PercentAPStudents_csv2;
 by Statename;

 title1 "combined09";
Proc print data = Combined09;
run;

*******************************   10   ***********************************************************************;

Proc Import Out = i10AverageClassSizeByState_xlsx (KEEP = State Average_Class_Size )
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\10AverageClassSizeByState.xlsx"
dbms = xlsx replace;
getnames = yes;
range = "A1:C53";
 run;

data i10AverageClassSizeByState_xlsx2;
  length statename $ 32 ;
 set i10AverageClassSizeByState_xlsx;
state = strip(state);
if state = "DC" then statename = "District of Columbia"; else statename = state;
statename = PROPCASE(statename);
if UPCASE(state) = "UNITED STATES" then state = "";
if state NE "";
drop state;
rename Average_Class_Size = Avg_Class_Size10;
run;

Proc sort data = i10AverageClassSizeByState_xlsx2;
by statename;
run;

title1 "i10AverageClassSizeByState_xlsx2";
 proc print data = i10AverageClassSizeByState_xlsx2;
 run;

Data Combined10;
 merge Combined09 i10AverageClassSizeByState_xlsx2;
 by Statename;

 title1 "Combined - 10";
Proc print data = Combined10;
run;


*******************************   11   ***********************************************************************;
Proc import 
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\11restaurants_vf.csv"  dbms = csv  replace
out = i11restaurants_vf_csv ; 
getnames = yes;
 run;

title1 "i11restaurants_vf_csv";
  proc print data = i11restaurants_vf_csv;
 run;

data i11restaurants_vf_csv2;
  length statename $ 32 ;
 set i11restaurants_vf_csv;
 state=Propcase(state);
if state = "DC" then statename = "District of Columbia"; else statename = state;
statename = PROPCASE(statename);
drop state state_abbr restaurants Population rest100people;
rename RestPerPerson = RestPerPerson11;
run;

title1 "i11restaurants_vf_csv2";
 proc print data = i11restaurants_vf_csv2;
 run;

 proc sort data = i11restaurants_vf_csv2;
 by statename;
 run;

Data Combined11;
 merge Combined10 i11restaurants_vf_csv2;
 by Statename;

 title1 "Combined - 11";
Proc print data = Combined11;
run;

*******************************   14   ***********************************************************************;
Proc Import Out = i14HS_graduate_2009_xls 
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\14High school graduate 2009.xlsx"
dbms = xlsx replace;
getnames = NO;
*range = "A1:B51";
run;

proc contents data = i14HS_graduate_2009_xls;
run;

data i14HS_graduate_2009_xls2;
set i14HS_graduate_2009_xls;
rename A = state;
PCT_HS_Grad14 = B/100;
PCT_HS_Grad14 = floor(PCT_HS_Grad14 *1000/10);* convert to ##.# format ;
*Keep state PCT_HS_Grad14;
run;

data i14HS_graduate_2009_xls3;
length statename $32;
set i14HS_graduate_2009_xls2;
state = Propcase(state);
if state = "Dc" then statename = "District Of Columbia"; else statename = state;
Keep statename PCT_HS_Grad14;
run;

 proc print data = i14HS_graduate_2009_xls3;
 run;


Proc sort data = i14HS_graduate_2009_xls3;
by statename;
run;

title1 "i14HS_graduate_2009_xls3";
 proc print data = i14HS_graduate_2009_xls3;
 run;

Data Combined14;
 merge Combined11 i14HS_graduate_2009_xls3;
 by Statename;

 title1 "Combined - 14";
Proc print data = Combined14;
run;


*******************************   15   ***********************************************************************;
Proc Import Out = i15SchoolLunch_csv (KEEP = STATE PERCENT )
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\15SchoolLunch.csv"  dbms = csv  replace
out = i15SchoolLunch_csv ; 
getnames = yes;
 run;

 data i15SchoolLunch_csv;
 set i15SchoolLunch_csv;
 if state = "IO" then state = "IA";
 PERCENT = floor(PERCENT *1000/10);* convert to ##.# format ;
 rename PERCENT = Pct_SchoolLunch15;
 run;


title1 "i15SchoolLunch_csv";
  proc print data = i15SchoolLunch_csv;
 run;

 proc sort data = i15SchoolLunch_csv;
 by state;
 run;

data i15SchoolLunch_csv2;
merge i15SchoolLunch_csv statecodes (rename=(statecode=state));
by state ;
 drop State;
run;

data i15SchoolLunch_csv2;
set i15SchoolLunch_csv2;
statename = Propcase(statename);
run;

proc sort data = i15SchoolLunch_csv2;
by Statename;
run;

proc print data = i15SchoolLunch_csv2;
run;

Data Combined15;
 merge Combined14 i15SchoolLunch_csv2;
 by Statename;

 title1 "Combined - 15";
Proc print data = Combined15;
run;

*******************************   17   ***********************************************************************;

Data i17States_HasStateIncomeTax_csv ;
length state $32 statename $32;
infile  "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\17States_HasStateIncomeTax.csv"  missover delimiter =",";
input state $ Has_ST_IncomeTax17 $;
if state NE "State";
state = Propcase(state);
if state = "Dc" then statename = "District Of Columbia"; else statename = state;
statename = Propcase(statename);
drop State;
 run;

title1 "i17States_HasStateIncomeTax_csv";
  proc print data = i17States_HasStateIncomeTax_csv;
 run;


 proc sort data = i17States_HasStateIncomeTax_csv;
 by statename;
 run;

Data Combined17;
 merge Combined15 i17States_HasStateIncomeTax_csv;
 by Statename;

 title1 "Combined - 17";
Proc print data = Combined17;
run;




*******************************   18   ***********************************************************************;

Data i18DeathPenaltyNotMerged_cs ;
length state $32 statename $32;
infile  "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\18DeathPenaltyStatsNotMerged.csv" Firstobs = 2 missover delimiter ="," dsd;
input obs state $ DeathPenaltyDesc $ HasDeathPenalty18 $;
state = Propcase(state);
if state = "Dc" then statename = "District Of Columbia"; else statename = state;
statename = Propcase(statename);
if Statename in ("Virgin Islands","Puerto Rico","Guam","American Samoa","Federal System") then statename = "";
if statename NE "";
*KEEP  Statename DeathPenaltyCode;
 run;

 data i18DeathPenaltyNotMerged_cs2 ;
 set i18DeathPenaltyNotMerged_cs ;
keep statename HasDeathPenalty18;
run;


title1 "i18DeathPenaltyNotMerged_cs2";
  proc print data = i18DeathPenaltyNotMerged_cs2;
 run;


 proc sort data = i18DeathPenaltyNotMerged_cs2;
 by statename;
 run;

Data Combined18;
 merge Combined17 i18DeathPenaltyNotMerged_cs2;
 by Statename;

 title1 "Combined - 18";
Proc print data = Combined18;
run;


*******************************   21   ***********************************************************************;
Proc Import Out = i21StudentsPerTeacher2013_csv(KEEP = ST Students per T );
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\21StudentsPerTeacher2013.csv";


Data i21StudentsPerTeacher2013_csv ;
length state $32 ;
infile  "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\21StudentsPerTeacher2013.csv" Firstobs = 2 missover delimiter ="," dsd;
input state $ StudentTeacherRatio21;
state = Upcase(state);
if State = "NB" then state = "NE";
 run;

title1 "i21StudentsPerTeacher2013_csv";
  proc print data = i21StudentsPerTeacher2013_csv;
 run;

 proc sort data = i21StudentsPerTeacher2013_csv;
 by State;
 run;
title1 "i21StudentsPerTeacher2013_csv";
  proc print data = i21StudentsPerTeacher2013_csv;
 run;


data i21StudentsPerTeacher2013_csv3;
merge i21StudentsPerTeacher2013_csv statecodes (rename=(statecode=state));
by state ;
statename = Propcase(statename);
 drop State;
run;
title1 "i21StudentsPerTeacher2013_csv3";
  proc print data = i21StudentsPerTeacher2013_csv3;
 run;

 proc sort data = i21StudentsPerTeacher2013_csv3;
 by statename;
 run;

Data Combined21;
 merge Combined18 i21StudentsPerTeacher2013_csv3;
 by Statename;

 title1 "Combined - 21";
Proc print data = Combined21;
run;


*******************************   22   ***********************************************************************;
Data i22Electoral_Votes_csv ;
length state $32 statename $32;
infile  "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\22Shaw_Electoral_Votes.csv"  firstobs = 2 missover delimiter =",";
input state $ Total_Electoral_Vote_Count22;
state = Propcase(state);
if state = "Dc" then statename = "District Of Columbia"; else statename = state;
statename = Propcase(statename);
drop State;
 run;

title1 "i22Electoral_Votes_csv";
  proc print data = i22Electoral_Votes_csv;
 run;

 proc sort data = i22Electoral_Votes_csv;
 by statename;
 run;

Data Combined22;
 merge Combined21 i22Electoral_Votes_csv;
 by Statename;

 title1 "Combined - 22";
Proc print data = Combined22;
run;

*******************************   23   ***********************************************************************;


Proc Import Out = i23HouseholdSize_xls
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\23ACS_14_5YR_GCT1105.US01PR.xls"
dbms = xls replace;
getnames = yes;
namerow = 7;
startrow =8;
 run;

data i23HouseholdSize_xls2;
 set i23HouseholdSize_xls;
 Geographic_Area = Strip(Geographic_Area);
 if Geographic_Area NE "";
 if Geographic_Area NE "United States";
 if Geographic_Area NE "Puerto Rico";
 Geographic_Area = Propcase(Geographic_Area);
 Rename Geographic_Area = Statename;
 Rename Person = AvgHouseholdSize23;
drop B C E F Margin_of_Error;
run;

title1  "i23HouseholdSize_xls2";
 proc print data = i23HouseholdSize_xls2;
 run;

Proc sort data = i23HouseholdSize_xls2;
by statename;
run;

 Data Combined23;
 merge Combined22 i23HouseholdSize_xls2;
 by Statename;

 title1 "Combined - 23";
Proc print data = Combined23;
run;


*******************************   24   ***********************************************************************;


Proc Import Out = i24PopDensity_xlsx 
datafile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Stage4Import\24PopDensity.xlsx"
dbms = xlsx replace;
getnames = no;
range = "A2:C52";
 run;

title1 "i24PopDensity_xlsx";
 proc print data = i24PopDensity_xlsx;
 run;

data i24PopDensity_xlsx2;
set i24PopDensity_xlsx;
 rename A = State;
 rename B = PopDensityPerSqMile24;
drop C;
run;

data i24PopDensity_xlsx3;
length statename $ 32;
set i24PopDensity_xlsx2;
PopDenPerSqMile24 = input(PopDensityPerSqMile24,comma9.2);
if state NE "State";
if state = "DC" then statename = "District of Columbia"; else statename = state;
statename = Propcase(statename);
drop state PopDensityPerSqMile24 ;
run;

title1 "i24PopDensity_xlsx3";
 proc print data = i24PopDensity_xlsx3;
 run;


Proc sort data = i24PopDensity_xlsx3;
by statename;
run;

title1 "i24PopDensity_xlsx3";
 proc print data = i24PopDensity_xlsx3;
 run;

Data Combined24;
 merge Combined23 i24PopDensity_xlsx3;
 by Statename;

 title1 "Combined - 23";
Proc print data = Combined24;
run;

proc contents data =i24PopDensity_xlsx3;
run;

data Combined24Final;
set Combined24;
run;

proc sort data = combined24;
by statename;
run;

data Stats2;
length Statename $32;
set Stats;
if state = "DC" then statename = "District Of Columbia"; else statename = state;
drop state;
run;

Proc sort data = Stats2;
By Statename;
run;

data SATACT;
merge Stats2 Combined24Final;
by Statename;
run;

Title1 "SAT ACT data combined with available statistics";
proc print data = SATACT ;
run;

* screwed up on deciding between DC or District of Columbia so change it back to DC to matches original data set;

Data SATACT2;
length state  $32;
retain State;
set SATACT;
if statename = "District Of Columbia" then state = "DC" ; else state = statename;
drop Statename;
run;

Title1 "SAT ACT data combined with available statistics Better version";
proc print data = SATACT2 ;
run;

* I really wanted the output to have one decimal place padded with zero if necessary and could not figure out a way to do that. SAS is frustrating;

proc export data = SATACT2
outfile = "\\client\c$\Users\anobs\Documents\GitHub\Unit11SATACT\Analysis\Output\RLISBONA_SATACT_Week11.csv"
dbms = csv replace;
run;
